// <auto-generated />
using System;
using HMProductInfoAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HMProductInfoAPI.Migrations
{
    [DbContext(typeof(HMProductDbContext))]
    partial class HMProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HMProductInfoAPI.Models.Article", b =>
                {
                    b.Property<Guid>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    b.Property<string>("ArticleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.Property<Guid>("ColourId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ColourId")
                        .HasColumnOrder(3);

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId")
                        .HasColumnOrder(2);

                    b.HasKey("ArticleId");

                    b.HasIndex("ProductId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("HMProductInfoAPI.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    b.Property<int>("ChannelId")
                        .HasColumnType("int")
                        .HasColumnName("ChannelId")
                        .HasColumnOrder(4);

                    b.Property<string>("CreatedByUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Code")
                        .HasColumnOrder(1);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name")
                        .HasColumnOrder(2);

                    b.Property<int>("ProductYear")
                        .HasColumnType("int")
                        .HasColumnName("Year")
                        .HasColumnOrder(3);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("RowVersion")
                        .HasColumnOrder(6);

                    b.Property<Guid>("SizeScaleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SizeScale")
                        .HasColumnOrder(5);

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("HMProductInfoAPI.Models.Article", b =>
                {
                    b.HasOne("HMProductInfoAPI.Models.Product", null)
                        .WithMany("Articles")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HMProductInfoAPI.Models.Product", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
